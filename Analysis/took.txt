	行	单词	token
-------------------------------------------
	4	int	102
	4	main	700
	4	(	200
	4	)	201
	5	{	301
	6	int	102
	6	a	700
	6	,	304
	6	b	700
	6	,	304
	6	c	700
	6	;	303
	7	float	106
	7	e	700
	7	=	228
	7	0.5	800
	7	;	303
	8	char	105
	8	d	700
	8	=	228
	8	'2'	500
	8	;	303
	10	a	700
	10	=	228
	10	10	400
	11	b	700
	11	=	228
	11	10	400
	11	;	303
	12	c	700
	12	=	228
	12	a	700
	12	*	211
	12	b	700
	12	+	209
	12	a	700
	12	-	210
	12	b	700
	12	;	303
	13	c	700
	13	*=	231
	13	b	700
	13	;	303
	14	c	700
	14	=	228
	14	a	700
	14	|	224
	14	b	700
	14	;	303
	15	c	700
	15	=	228
	15	a	700
	15	&	212
	15	b	700
	15	;	303
	16	c	700
	16	=	228
	16	a	700
	16	^	62
	16	b	700
	16	;	303
	17	c	700
	17	=	228
	17	!	205
	17	a	700
	17	;	303
	18	c	700
	18	=	228
	18	c	700
	18	<<	216
	18	1	400
	18	;	303
	19	c	700
	19	=	228
	19	switch_fuc	700
	19	(	200
	19	int	102
	19	a	700
	19	,	304
	19	int	102
	19	b	700
	19	)	201
	19	++	207
	19	;	303
	20	c	700
	20	=	228
	20	++	207
	20	switch_fuc	700
	20	(	200
	20	a	700
	20	,	304
	20	b	700
	20	)	201
	20	;	303
	21	c	700
	21	=	228
	21	sizeof	132
	21	(	200
	21	switch_fuc	700
	21	(	200
	21	a	700
	21	,	304
	21	b	700
	21	)	201
	21	;	303
	23	printf	700
	23	(	200
	23	"c=%d\n"	600
	23	,	304
	23	c	700
	23	;	303
	24	return	123
	24	1	400
	25	}	302
