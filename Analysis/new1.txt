	行	单词	token
-------------------------------------------
	4	int	102
	4	a_global	700
	4	=	228
	4	2	400
	4	,	304
	4	b_global	700
	4	=	228
	4	3	400
	4	;	303
	5	void	124
	5	if_fuc	700
	5	(	200
	5	)	201
	6	{	301
	7	int	102
	7	a	700
	7	=	228
	7	10	400
	7	;	303
	8	int	102
	8	b	700
	8	=	228
	8	1	400
	8	;	303
	9	int	102
	9	c	700
	9	;	303
	10	if	128
	10	(	200
	10	a	700
	10	>	220
	10	b	700
	10	&&	225
	10	a	700
	10	==	222
	10	b	700
	10	)	201
	11	c	700
	11	=	228
	11	1	400
	11	;	303
	12	else	129
	13	c	700
	13	=	228
	13	2	400
	13	;	303
	14	}	302
	16	int	102
	16	switch_fuc	700
	16	(	200
	16	int	102
	16	a	700
	16	,	304
	16	int	102
	16	b	700
	16	)	201
	17	{	301
	18	int	102
	18	c	700
	18	;	303
	19	a	700
	19	=	228
	19	10	400
	19	;	303
	20	switch	114
	20	(	200
	20	a	700
	20	)	201
	21	{	301
	22	case	115
	22	1	400
	22	c	700
	22	=	228
	22	1	400
	22	;	303
	22	break	117
	23	case	115
	23	2	400
	23	:	310
	23	c	700
	23	=	228
	23	2	400
	23	;	303
	23	break	117
	23	;	303
	24	default	116
	24	:	310
	24	c	700
	24	=	228
	24	3	400
	24	;	303
	25	}	302
	26	return	123
	26	c	700
	26	;	303
	27	}	302
	28	void	124
	28	while_fuc	700
	28	(	200
	28	)	201
	29	{	301
	30	int	102
	30	a	700
	30	,	304
	30	b	700
	30	;	303
	31	a	700
	31	=	228
	31	10	400
	31	;	303
	32	b	700
	32	=	228
	32	1	400
	32	;	303
	33	while	127
	33	(	200
	33	b	700
	33	<	218
	33	10	400
	33	)	201
	34	{	301
	35	a	700
	35	++	207
	35	;	303
	37	}	302
